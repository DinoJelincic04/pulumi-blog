name: Pulumi blog action 
on: 
  workflow_dispatch:
    inputs:
      buildDockerImage:
        description: 'Build docker image (yes/no*)'
        required: true
        default: 'yes'
jobs:
  preview:
    name: Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2 
      
      - name: Set up Python 3.8                               
        uses: actions/setup-python@v2                               
        with:                                 
          python-version: '3.8'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, publish, and deploy image to ECR
        id: build-image
        if: (github.event.inputs.buildDockerImage == 'yes')
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: blog-repo
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./flask_app > docker_build.log 2>&1
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - run: pip install -r requirements.txt
      - uses: pulumi/actions@v3
        with:
          command: destroy
          #command: preview
          #command: up
          stack-name: DinoJelincic/eks-pulumi-blog/develop
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      # - name: Fetch EKS Cluster Kubeconfig
      #   env:
      #     CLUSTER_NAME: eks-cluster-9252e06
      #   run: |
      #     aws eks update-kubeconfig --name $CLUSTER_NAME --region ${{ secrets.AWS_REGION }}

      # - name: Deploy to EKS
      #   run: |
      #     kubectl apply -f k8s  
